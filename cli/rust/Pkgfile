# Depends on: curl cmake python llvm libssh2


packager="sipo"
contributors=""
maintainer="sipo"


description="The Rust programming language is designed to be a safe, concurrent, practical language"
url="https://www.rust-lang.org"


name=rust
version=1.35.0
release=1


source=(https://static.rust-lang.org/dist/rustc-$version-src.tar.gz)



build() {
cd rustc-$version-src

cat <<EOF > config.toml
# see config.toml.example for more possible options
[llvm]

# use ninja
ninja = true

targets = "X86"
# When compiling LLVM, the experimental targets (WebAssembly
# and RISCV) are built by default - omit them
experimental-targets = ""

[build]
# omit HTML docs to save time and space (comment this to build them)
docs = false

# install cargo as well as rust
extended = true

[install]
# Adjust the prefix for the desired destination
prefix = "/usr"

# docdir is used even if the full awesome docs are not installed
docdir = "share/doc/rustc"

[rust]
channel = "stable"
rpath = false

# BLFS does not install the FileCheck executable from llvm,
# so disable codegen tests
codegen-tests = false

# get a trace if there is an Internal Compiler Exception
backtrace-on-ice = true

EOF

	export RUSTFLAGS="$RUSTFLAGS -C link-args=-lffi"
	python3 ./x.py build --exclude src/tools/miri
	export LIBSSH2_SYS_USE_PKG_CONFIG=1
	DESTDIR=$PKG python3 ./x.py install
	rm -r $PKG/usr/share/doc
}



